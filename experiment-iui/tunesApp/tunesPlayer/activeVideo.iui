* (playlists:, otherVideos:, videoPlayerPlay<?>:) {
  [document:, location:, window:] = import("core:web")
  
  &activeVideo<?%>
  &activePlaylist<?%>
  &focusPreselectedVideo = () {}
  
  if location.hash {
    &focusPreselectedVideo = () {
      document.querySelector("#player-h2")<?>.focus(preventScroll: true)
      document
        .querySelector("tunes-player")<?>
        .scrollIntoView(behavior: "instant", block: "start")
    }
  
    videoId = location.hash.slice(1)

    otherVideo<?> = otherVideos.find((video) { * video.id == videoId })<?>
    if otherVideo<?> :
      &activeVideo = otherVideo
      *
    ;

    playlists.each((playlist) :
      playlist.videos.each((video) :
        if video.id == videoId :
          &activeVideo = video
          &activePlaylist = playlist
          *
        ;
      ;)
    ;)
  } else {
    // Cannot show a playlist with a content advisory by default because it would bypass the
    // permission dialog
    &activePlaylist<?> = playlists.find((playlist) { * !playlist.needsContentAdvisory })<?>
    &activeVideo = playlist.videos[0]<?>.forceOption()
  }

  playContent = (video<?>:, playlist<?>:) {
    if playlist<?>.needsContentAdvisory && !window.confirm(
      "This playlist contains content some viewers might find disturbing, are you sure you want \
        to continue?"
    ) : * ;

    &activePlaylist<?> = playlist<?>

    &activeVideo = if !video<?> {
      * &activePlaylist.videos[0]<?>.forceOption()
    } else {
      * video<?>.forceOption()
    }

    document.querySelector("#player-h2")<?>.focus(preventScroll: true)
    document
      .querySelector("tunes-player")<?>
      .scrollIntoView(behavior: "smooth", block: "start")
    videoPlayerPlay<?>()
  }

  * [
    activeVideo: ^&activeVideo,
    activePlaylist<?>: ^&activePlaylist<?>,
    playContent:,
    focusPreselectedVideo: ^&focusPreselectedVideo,
  ]
}
