* (playlists:, otherVideos:, videoPlayerPlay<?>:) {
  [document:, location:, window:] = import("core:web")
  
  &video<?%>
  &playlist<?%>
  &onUiComplete = () {}
  
  if location.hash {
    &onUiComplete = () {
      document.querySelector("#player-h2")<?>.focus(preventScroll: true)
      document
        .querySelector("tunes-player")<?>
        .scrollIntoView(behavior: "instant", block: "start")
    }
  
    videoId = location.hash.slice(1)

    otherVideo<?> = otherVideos.find((video) { * video.id == videoId })<?>
    if otherVideo<?> :
      &video = otherVideo
      *
    ;

    playlists.each((eachPlaylist) :
      eachPlaylist.videos.each((eachVideo) :
        if eachVideo.id == videoId :
          &video = eachVideo
          &playlist = eachPlaylist
          *
        ;
      ;)
    ;)
  } else {
    // Cannot show a playlist with a content advisory by default because it would bypass the
    // permission dialog
    &playlist<?> = playlists.find((playlist) { * !playlist.needsContentAdvisory })<?>
    &video = playlist.videos[0]<?>[?!!]
  }

  playContent = (newVideo<?>:, newPlaylist<?>:) {
    if newPlaylist<?>.needsContentAdvisory && !window.confirm(
      "This playlist contains content some viewers might find disturbing, are you sure you want \
        to continue?"
    ) : * ;

    &playlist<?> = newPlaylist<?>

    &video = if !newVideo<?> {
      * &playlist.videos[0]<?>[?!!]
    } else {
      * newVideo<?>[?!!]
    }

    document.querySelector("#player-h2")<?>.focus(preventScroll: true)
    document
      .querySelector("tunes-player")<?>
      .scrollIntoView(behavior: "smooth", block: "start")
    videoPlayerPlay<?>()
  }

  * [
    video: &video[&],
    playlist<?>: &playlist<?>[&]<?>,
    playContent:,
    onUiComplete: &onUiComplete[&],
  ]
}
