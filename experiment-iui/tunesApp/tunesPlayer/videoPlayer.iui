* (youtubeId:, timeInterval:) {
  [getDiv:, ...] = import("core:reconciler")
  [document:, location:, windowGlobals:, setInterval:, clearInterval:, ...] = import("core:web")
  
  ui = getDiv(id: "player", [])

  onUiAttached = async () {
    youtubePlayer<%> = await getPromise((resolve) {
      window.onYouTubeIframeAPIReady = () {
        youtubePlayer<%> = windowGlobals<%>["YT"]<%>["Player"]<%>("player", [
          height: "315",
          width: "560",
          videoId: youtubeId,
          playerVars: [
            playsinline: 1, // Instead of immediately going full screen.
            color: "white", // Instead of youtube red.
            rel: 0, // Recommend videos from the same channel after it ends.
          ],
        ])<%>

        youtubePlayer<%>.addEventListener("onReady", () {
          resolve(youtubePlayer<%>)
        })<%>
      }

      scriptElement = document.createElement("script")
      scriptElement.src = "https://www.youtube.com/iframe_api"
      firstScriptTag = document.getElementsByTagName("script")[0]
      firstScriptTag.parentNode.insertBefore(scriptElement, firstScriptTag)
    })

    status = {
      youtubePlayer<%>.addEventListener("onStateChange", (data<%>) :
        given data<%> :
          windowGlobals<%>["YT"]<%>["PlayerState"]<%>["UNSTARTED"]<%> : * .cleared ;
          windowGlobals<%>["YT"]<%>["PlayerState"]<%>["PLAYING"]<%> : * .playing ;
          windowGlobals<%>["YT"]<%>["PlayerState"]<%>["PAUSED"]<%> : * .paused ;
          windowGlobals<%>["YT"]<%>["PlayerState"]<%>["BUFFERING"]<%> : * .buffering ;
          windowGlobals<%>["YT"]<%>["PlayerState"]<%>["ENDED"]<%> : * .ended ;
          else : break ;
        ;
      ;)

      * .cleared
    }

    time<?> = {
      getCurrentTime = () { * youtubePlayer<%>.getCurrentTime<%>()<%>.forceType(0) }
      
      &interval<?%>

      watch status :
        if status == .playing && !&interval<?%> :
          &interval = startInterval(timeInterval, () :
            if time<?> : 
              log.info(time.round(places: 3))
            ;
            * getCurrentTime()
          ;)
        ;

        if status != .playing && &interval<?> :
          &interval.stop()
          &interval = null
        ;
      ;

      watch youtubeId : * null ;
    }

    watch youtubeId {
      youtubePlayer<%>.loadVideoById(videoId: youtubeId)<%>
    }

    play = () : youtubePlayer<%>.playVideo<%>()<%> ;

    pause = () : youtubePlayer<%>.pauseVideo<%>()<%> ;

    setVolume = {
      &interval<?%>
      &transitionVolume = 1.0
      &volume = 1.0
      youtubePlayer<%>.setVolume(100)<%>

      * (number) {
        if &interval<?%> : &interval<%>.stop() ;

        &interval = startInterval(25, () {
          if &transitionVolume < &volume {
            &transitionVolume += 0.025
            youtubePlayer<%>.setVolume(&transitionVolume * 100)<%>
            if &transitionVolume > &volume : &interval.stop() ;
          }
          if &transitionVolume > &volume {
            &transitionVolume -= 0.025
            youtubePlayer<%>.setVolume(&transitionVolume * 100)<%>
            if &transitionVolume < &volume : &interval.stop() ;
          }
        })

        &volume = number
      }
    }

    document.addEventListener("keydown", (event) {
      if event.key == "k" {
        if status == .playing : pause() ;
        if status == .paused : play() ;
      }
    })

    * [status:, time<?>:, play:, pause:, setVolume:, ui:]
  }

  * [ui:, onUiAttached:]
}
