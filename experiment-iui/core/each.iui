each = (list<%>, callback<%>) {
  Each = each
  List = list<%>.forceType([%, ...])
  Callback = callback<%>.forceType((%) { % })
  Item<%> = Callback.arguments[0]<%>

  if !Item<%>.typeMatch(List.Item<%>) :
    * getError(
      "Failed to match the type of the items in the list with the first argument of the provided
        callback function"
    )
  ;

  [isAsync:, Return<[Warnings]>:, ...] = Callback

  Each.&isAsync = isAsync

  &newList = [Item<%>, ...]

  &i = 0
  i = lock &i
  
  while i < list.count :
    result<[Warnings]> = callback(list[i], index: i).awaitIfAsync
    &newList = &.append(result<[Warnings]>)
    &i += 1
  ;

  * _ lock &newList
}
