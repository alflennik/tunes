each = (list<%>, callback<%>) {
  Each = each
  List = list<%>.forceType([%, ...])
  Callback = callback<%>.forceType((%) { % })
  Item<%> = Callback.arguments[0]<%>

  if !Item<%>.typeMatch(List.Item<%>) :
    * getError(
      "Failed to match the type of the items in the list with the first argument of the provided \
        callback function"
    )
  ;

  [isAsync, Result<[Warnings]>] = Callback

  Each.&isAsync = isAsync

  &newList = [Item<%>, ...]

  &i = 0
  i = ^&i
  
  while i < list.count :
    result<[Warnings]> = if isAsync {
      * callback(list[i], index<?>: i).await
    } else {
      * callback(list[i], index<?>: i)
    }
    &newList = &.append(result<[Warnings]>)
    &i += 1
  ;

  * ^&newList.allowDiscard()
}
