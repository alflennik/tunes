each = (list<%>, callback<%>) {
  Each = each
  List = list<%>.assignType!!([%...])
  Callback = callback<%>.assignType!!((%) {%})
  Item<%> = Callback.arguments[0]<%>

  if !Item<%>.matches(List.Item<%>) :
    * error(
      "Failed to match the items from the list with the first argument of the provided callback \
      function"
    )
  ;

  Each.warnings."~" = Callback.warnings."~"

  &newList = [Item<%>...]

  &i = 0
  while &i < list.count :
    result<\(Callback.warnings)> = if Callback.warnings["~"] {
      * await callback(list[&i], index<?>: lock(&i))
    } else {
      * callback(list[&i], index<?>: lock(&i))
    }
    &newList = &.append(result)
    &i += 1
  ;

  * lock(&newList)
}
