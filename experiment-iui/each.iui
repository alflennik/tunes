* each = generic (
  list<[Generic]>,
  callback<(Generic, index?: 0) { Generic }>,
  concurrent<?true> = ?? false,
) &Returns {
  forceMatchingType(list.Item, callback.Parameters[0])

  concurrent.forceStaticValue()

  &Returns = **{
    if callback.Returns.isPromise() && concurrent {
      <<** callback.Returns.ResolvesTo
    } else {
      <<** callback.Returns
    }
  }

  &index = 0
  index = &index.locked() 

  outputList = []

  while (list[index]) {
    result = callback(list[index], index:)

    if (result.isPromise() && concurrent) {
      result.await()  
    }

    outputList.add(result)
    
    &index += 1
  }

  << outputList
}
