getUniqueSet = generic (Item<TypeSignature> ?? Any) &Returns {
  list<[ Item ]> = []
  
  add = (item<Item>) <none> {
    if !list.contains(item) { list.add(item) }
  }

  remove = (item<Item>) <none> {
    index = list.findIndex(item)
    if index { list.remove(index) }
  }

  result = [ add, remove, empty: list.empty, count: list.count ]

  &Returns = <result>

  <<* result
}

uniqueArtists = getUniqueSet(<Artist>)
songs.each((song) {
  given song.by {
    .artist { uniqueArtists.add(song.by) }
    .artists { song.by.each((artist) { uniqueArtists.add(artist) }) }
    else {}
  }
  uniqueArtists.add(song.artist)
})
